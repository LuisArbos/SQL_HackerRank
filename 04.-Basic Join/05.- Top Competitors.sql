/*
Top Competitors

Julia just finished conducting a coding contest, and she needs your help assembling the leaderboard! Write a query to print the respective hacker_id and name of hackers who achieved full scores for more than one challenge. Order your output in descending order by the total number of challenges in which the hacker earned a full score. If more than one hacker received full scores in same number of challenges, then sort them by ascending hacker_id.

HACKER

FIELD 		TYPE
 HACKER_ID	 INTEGER
 NAME		 STRING

DIFFICULTY

FIELD 			TYPE
 DIFFICULTY_LEVEL	 INTEGER
 SCORE		 	INTEGER

CHALLENGES

FIELD 			TYPE
 CHALLENGE_ID	 	 INTEGER
 HACKER_ID	 	 INTEGER
 DIFFICULTY_LEVEL	 INTEGER

SUBMISSIONS

FIELD 			TYPE
 SUBMISSIONS_ID		 INTEGER
 CHALLENGE_ID	 	 INTEGER
 HACKER_ID	 	 INTEGER
 SCORE			 INTEGER


*/

/* MYSQL SUBMISSION */

SELECT TABLE1.HACKER_ID, TABLE1.NAME
FROM (SELECT H.HACKER_ID, H.NAME, COUNT(DISTINCT C.CHALLENGE_ID) AS FULL_SCORE_COUNT
    FROM HACKERS H
    JOIN SUBMISSIONS S ON S.HACKER_ID = H.HACKER_ID
    JOIN CHALLENGES C ON S.CHALLENGE_ID = C.CHALLENGE_ID
    LEFT JOIN DIFFICULTY D ON C.DIFFICULTY_LEVEL = D.DIFFICULTY_LEVEL AND S.SCORE = D.SCORE
    WHERE D.SCORE IS NOT NULL
    GROUP BY H.HACKER_ID, H.NAME
    HAVING FULL_SCORE_COUNT > 1
) AS TABLE1
ORDER BY TABLE1.FULL_SCORE_COUNT DESC, TABLE1.HACKER_ID ASC;

/* MS SQL SERVER SUBMISSION*/

SELECT TABLE1.HACKER_ID, TABLE1.NAME
FROM (SELECT H.HACKER_ID, H.NAME, COUNT(DISTINCT C.CHALLENGE_ID) AS FULL_SCORE_COUNT
    FROM HACKERS H
    JOIN SUBMISSIONS S ON S.HACKER_ID = H.HACKER_ID
    JOIN CHALLENGES C ON S.CHALLENGE_ID = C.CHALLENGE_ID
    LEFT JOIN DIFFICULTY D ON C.DIFFICULTY_LEVEL = D.DIFFICULTY_LEVEL AND S.SCORE = D.SCORE
    WHERE D.SCORE IS NOT NULL
    GROUP BY H.HACKER_ID, H.NAME
    HAVING COUNT(DISTINCT C.CHALLENGE_ID) > 1
) AS TABLE1 ORDER BY TABLE1.FULL_SCORE_COUNT DESC, TABLE1.HACKER_ID ASC;
